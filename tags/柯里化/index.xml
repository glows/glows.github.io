<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>柯里化 on Glow's Blog</title><link>https://example.com/tags/%E6%9F%AF%E9%87%8C%E5%8C%96/</link><description>Recent content in 柯里化 on Glow's Blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>glows</copyright><lastBuildDate>Thu, 10 May 2018 15:27:36 +0000</lastBuildDate><atom:link href="https://example.com/tags/%E6%9F%AF%E9%87%8C%E5%8C%96/index.xml" rel="self" type="application/rss+xml"/><item><title>柯里化函数与多个连续箭头函数</title><link>https://example.com/_posts/%E6%9F%AF%E9%87%8C%E5%8C%96%E5%87%BD%E6%95%B0%E4%B8%8E%E5%A4%9A%E4%B8%AA%E8%BF%9E%E7%BB%AD%E7%AE%AD%E5%A4%B4%E5%87%BD%E6%95%B0/</link><pubDate>Thu, 10 May 2018 15:27:36 +0000</pubDate><guid>https://example.com/_posts/%E6%9F%AF%E9%87%8C%E5%8C%96%E5%87%BD%E6%95%B0%E4%B8%8E%E5%A4%9A%E4%B8%AA%E8%BF%9E%E7%BB%AD%E7%AE%AD%E5%A4%B4%E5%87%BD%E6%95%B0/</guid><description>柯里化函数与多个连续箭头函数 柯里化 在计算机科学中，柯里化（英语：Currying），又译为卡瑞化或加里化， 是把接受多个参数的函数变换成接受一个单一参数（最初函数的第一个参数）的函数， 并且返回接受余下的参数而且返回结果的新函数的技术。 这个技术由克里斯托弗·斯特雷奇以逻辑学家哈斯凯尔·加里命名的， 尽管它是Moses Schönfinkel和戈特洛布·弗雷格发明的。
说的明白一点就是，给函数传递一部分参数，让它返回一个函数去处理其他参数，举个例子，求三个数之和：
let addOne = function add(x) { return function(y) { return function(z) { return x + y + z } } } let one = addOne(3) // 函数工厂 : 创造函数的工厂 创建一个one 函数 console.log(one) //ƒ (y) {return function (z) {return x + y + z}} let two = one(4) console.log(two) //ƒ (z) {return x + y + z} let three = two(5) console.log(three) //12 多个连续箭头函数 function add(a) { return function(b) { return a + b } } var add3 = add(3) add3(4) === 3 + 4 //true add 函数 在 es6 里的写法等价为</description></item></channel></rss>