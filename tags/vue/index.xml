<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>vue on Glow's Blog</title><link>https://glows.github.io/tags/vue/</link><description>Recent content in vue on Glow's Blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>glows</copyright><lastBuildDate>Wed, 25 Jul 2018 10:37:01 +0000</lastBuildDate><atom:link href="https://glows.github.io/tags/vue/index.xml" rel="self" type="application/rss+xml"/><item><title>Vue改变对象的属性值视图不更新的问题</title><link>https://glows.github.io/_posts/vue%E6%94%B9%E5%8F%98%E5%AF%B9%E8%B1%A1%E7%9A%84%E5%B1%9E%E6%80%A7%E5%80%BC%E8%A7%86%E5%9B%BE%E4%B8%8D%E6%9B%B4%E6%96%B0%E7%9A%84%E9%97%AE%E9%A2%98/</link><pubDate>Wed, 25 Jul 2018 10:37:01 +0000</pubDate><guid>https://glows.github.io/_posts/vue%E6%94%B9%E5%8F%98%E5%AF%B9%E8%B1%A1%E7%9A%84%E5%B1%9E%E6%80%A7%E5%80%BC%E8%A7%86%E5%9B%BE%E4%B8%8D%E6%9B%B4%E6%96%B0%E7%9A%84%E9%97%AE%E9%A2%98/</guid><description>最近项目在使用vue，遇到几次修改了对象的属性后，页面并不重新渲染，场景如下：
查看官方文档后了解到：受到javascript的限制，Vue不能检测到对象属性的添加或删除。因为Vue利用的是Object的defineProperty()方法，在初始化实列时将属性转为getter/setter，所以属性必须在data对象上才能让vue转换它。 后通过查找资料修改为使用$set来设定修改值，js如下： 我们可以使用 Vue.set(object, key, value) 方法将响应属性添加到数组里的对象上。 所以将
this.stuList[index].checked=true; 改成
Vue.set(this.stuList[index], &amp;#39;checked&amp;#39;, true); 还可以使用 vm.$set实例方法，这也是全局 Vue.set方法的别名:
this.$set(this.stuList[index],&amp;#39;checked&amp;#39;,true); 但是依然没有起作用，
再从查找的资料才知道是数据层次太多，没有触发render函数进行自动更新，需手动调用，调用方式如下:
this.$forceUpdate(); 完整代码如下：
handleCheck(index) { this.$nextTick(() =&amp;gt; { this.$forceUpdate(); this.$set(this.stuList[index],&amp;#39;checked&amp;#39;,true); }) },</description></item><item><title>vue 组件通信</title><link>https://glows.github.io/_posts/vue-%E7%BB%84%E4%BB%B6%E9%80%9A%E4%BF%A1/</link><pubDate>Thu, 12 Apr 2018 11:35:44 +0000</pubDate><guid>https://glows.github.io/_posts/vue-%E7%BB%84%E4%BB%B6%E9%80%9A%E4%BF%A1/</guid><description>在 Vue 中，父子组件的关系可以总结为 prop 向下传递，事件向上传递。 父组件通过 prop 给子组件下发数据，子组件通过事件给父组件发送消息。看看它们是怎么工作的。 父组件通过 prop 给子组件下发数据:
Vue.component(&amp;#39;child&amp;#39;, { // 在 JavaScript 中使用 camelCase props: [&amp;#39;myMessage&amp;#39;], template: &amp;#39;&amp;lt;span&amp;gt;{{ myMessage }}&amp;lt;/span&amp;gt;&amp;#39; }) &amp;lt;!-- 在 HTML 中使用 kebab-case --&amp;gt; &amp;lt;child my-message=&amp;#34;hello!&amp;#34;&amp;gt;&amp;lt;/child&amp;gt; 子组件通过事件给父组件发送消息:
&amp;lt;div id=&amp;#34;message-event-example&amp;#34; class=&amp;#34;demo&amp;#34;&amp;gt; &amp;lt;p v-for=&amp;#34;msg in messages&amp;#34;&amp;gt;{{ msg }}&amp;lt;/p&amp;gt; &amp;lt;button-message v-on:message=&amp;#34;handleMessage&amp;#34;&amp;gt;&amp;lt;/button-message&amp;gt; &amp;lt;!-- 使用 $on(eventName) 监听事件 --&amp;gt; &amp;lt;/div&amp;gt; Vue.component(&amp;#39;button-message&amp;#39;, { template: `&amp;lt;div&amp;gt; &amp;lt;input type=&amp;#34;text&amp;#34; v-model=&amp;#34;message&amp;#34; /&amp;gt; &amp;lt;button v-on:click=&amp;#34;handleSendMessage&amp;#34;&amp;gt;Send&amp;lt;/button&amp;gt; &amp;lt;/div&amp;gt;`, data: function () { return { message: &amp;#39;test message&amp;#39; } }, methods: { handleSendMessage: function () { this.</description></item><item><title>vue项目下vuex的配置</title><link>https://glows.github.io/_posts/vue%E9%A1%B9%E7%9B%AE%E4%B8%8Bvuex%E7%9A%84%E9%85%8D%E7%BD%AE/</link><pubDate>Wed, 29 Nov 2017 10:14:06 +0000</pubDate><guid>https://glows.github.io/_posts/vue%E9%A1%B9%E7%9B%AE%E4%B8%8Bvuex%E7%9A%84%E9%85%8D%E7%BD%AE/</guid><description>首先成功运行vue-cli项目
安装vuex
npm instal i vuex &amp;ndash;save 修改配置文件
store
新建文件夹store（与router同级） 然后在store目录下新建index.js
import Vue from &amp;#39;vue&amp;#39;; import Vuex from &amp;#39;vuex&amp;#39;; Vue.use(Vuex); export default new Vuex.Store({ strict: process.env.NODE_ENV !== &amp;#39;production&amp;#39;, modules: { }, getters: { }, actions: { }, }); main.js
import Vue from &amp;#39;vue&amp;#39; import router from &amp;#39;./router&amp;#39; import store from &amp;#39;./store&amp;#39; Vue.config.productionTip = false /* eslint-disable no-new */ new Vue({ router, store }).$mount(&amp;#39;#app&amp;#39;) index.html
&amp;lt;!DOCTYPE html&amp;gt; &amp;lt;html&amp;gt; &amp;lt;head&amp;gt; &amp;lt;meta charset=&amp;#34;utf-8&amp;#34;&amp;gt; &amp;lt;title&amp;gt;vue-cli&amp;lt;/title&amp;gt; &amp;lt;/head&amp;gt; &amp;lt;body&amp;gt; &amp;lt;div id=&amp;#34;app&amp;#34;&amp;gt; &amp;lt;router-view&amp;gt;&amp;lt;/router-view&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;/body&amp;gt; &amp;lt;/html&amp;gt;</description></item></channel></rss>