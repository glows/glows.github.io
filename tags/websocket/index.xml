<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>WebSocket on Glow's Blog</title><link>https://glows.github.io/tags/websocket/</link><description>Recent content in WebSocket on Glow's Blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>glows</copyright><lastBuildDate>Wed, 19 Aug 2020 10:03:07 +0000</lastBuildDate><atom:link href="https://glows.github.io/tags/websocket/index.xml" rel="self" type="application/rss+xml"/><item><title>WebSocket 使用</title><link>https://glows.github.io/posts/2020-8-19-websocket-%E5%B0%81%E8%A3%85/</link><pubDate>Wed, 19 Aug 2020 10:03:07 +0000</pubDate><guid>https://glows.github.io/posts/2020-8-19-websocket-%E5%B0%81%E8%A3%85/</guid><description>WebSocket 封装 WebSocket是一种网络传输协议，可在单个TCP连接上进行全双工通信，位于OSI模型的应用层。
WebSocket使得客户端和服务器之间的数据交换变得更加简单，允许服务端主动向客户端推送数据。在WebSocket API中，浏览器和服务器只需要完成一次握手，两者之间就可以创建持久性的连接，并进行双向数据传输。
WebSocket协议规范将ws（WebSocket）和wss（WebSocket Secure）定义为两个新的统一资源标识符（URI）方案，分别对应明文和加密连接。
1let websock = null 2let messageCallback = null // callback message important !!!! 3let errorCallback = null 4let wsUrl = &amp;#39;&amp;#39; 5 6// 接收ws后端返回的数据 7function websocketonmessage (e) { 8 messageCallback(JSON.parse(e.data)) 9} 10 11/** 12 * 发起websocket连接 13 * @param {Object} agentData 需要向后台传递的参数数据 14 */ 15function websocketSend (agentData) { 16 // 加延迟是为了尽量让ws连接状态变为OPEN 17 setTimeout(() =&amp;gt; { 18 // 添加状态判断，当为OPEN时，发送消息 19 if (websock.readyState === websock.OPEN) { // websock.</description></item></channel></rss>